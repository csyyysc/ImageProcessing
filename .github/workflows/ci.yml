name: CI - Test, Build and Push

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  packages: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install uv
          uv sync --frozen

      - name: Run tests
        run: |
          make test

  docker-backend:
    name: Build and push backend image
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/csyyysc/image-processing-backend
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=sha,format=short

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=gha,key=backend
          cache-to: type=gha,mode=max,key=backend
          platforms: linux/amd64,linux/arm64

  docker-frontend:
    name: Build and push frontend image
    needs: test
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/csyyysc/image-processing-frontend
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=sha,format=short

      - name: Debug and set environment variables
        run: |
          echo "🔍 Available variables:"
          echo "  BACKEND_URL (vars): '${{ vars.BACKEND_URL }}'"
          echo "  BACKEND_URL (secrets): '${{ secrets.BACKEND_URL }}'"
          
          # Set the BACKEND_URL with fallbacks
          if [ -n "${{ vars.BACKEND_URL }}" ]; then
            echo "✅ Using vars.BACKEND_URL"
            echo "FINAL_BACKEND_URL=${{ vars.BACKEND_URL }}" >> $GITHUB_ENV
          elif [ -n "${{ secrets.BACKEND_URL }}" ]; then
            echo "✅ Using secrets.BACKEND_URL" 
            echo "FINAL_BACKEND_URL=${{ secrets.BACKEND_URL }}" >> $GITHUB_ENV
          else
            echo "⚠️  Using fallback URL"
            echo "FINAL_BACKEND_URL=https://image-processing-api.csyyysc.com" >> $GITHUB_ENV
          fi
          
      - name: Show final URL
        run: echo "🎯 Final BACKEND_URL: ${{ env.FINAL_BACKEND_URL }}"

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.frontend
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=gha,key=frontend
          cache-to: type=gha,mode=max,key=frontend
          platforms: linux/amd64,linux/arm64
          build-args: |
            BACKEND_URL=${{ env.FINAL_BACKEND_URL }}

